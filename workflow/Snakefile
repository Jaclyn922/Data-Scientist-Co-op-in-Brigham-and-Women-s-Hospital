TARGETS = [
    'metadata/experiments.tsv',
    "metadata/cases.tsv",
    "metadata/samples.tsv",
    "metadata/aliquots.tsv",    
]
rule: input: TARGETS

rule extract_sample:
    input:
    output: df="tmp/samples.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_sample.py"

rule extract_study:
    input:
    output: df="tmp/study.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_study.py"

rule extract_tissue:
    input:
    output: df="tmp/tissue.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_tissue.py"
    
rule extract_cohort:
    input:
    output: df="tmp/cohort.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_cohort.py"

rule extract_collections:
    input:
    output: df="tmp/collections.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_collections.py"

rule extract_sf:
    input:
    output: df="tmp/sf.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_sf.py"

rule extract_packages:
    input:
    output: df="tmp/packages.csv"
    conda: "envs/sqlalchemy.yaml"
    script: "scripts/python/extract_packages.py"

rule extract_datasets:
    input:
    output: df="tmp/datasets.csv"
    conda: "envs/redmine.yaml"
    script: "scripts/python/extract_datasets.py"
    
rule extract_chammps:
    input:
        datasets="tmp/datasets.csv",
        samples="tmp/samples.csv",
    output:
        samples="tmp/chammps-samples.csv",
        subjects="tmp/chammps-subjects.csv",
        datasets="tmp/chammps-datasets.csv",
    conda: "envs/redmine.yaml"
    script: "scripts/python/extract_chammps.py"

rule transform_experiments:
    input: datasets="tmp/chammps-datasets.csv",
    output: experiments="metadata/experiments.tsv",
    script: "scripts/python/transform_experiments.py"

rule transform_cases:
    input:
        subjects="tmp/chammps-subjects.csv",
        # lims_subjects="tmp/subjects.csv",
    output: cases="metadata/cases.tsv",
    script: "scripts/python/transform_cases.py"

rule transform_samples:
    input:
        samples="tmp/chammps-samples.csv",
        samplefamiliess="tmp/sf.csv",
    output: samples="metadata/samples.tsv",
    script: "scripts/python/transform_samples.py"

rule transform_aliquots:
    input: samples="tmp/chammps-samples.csv",
    output: aliquots="metadata/aliquots.tsv",
    script: "scripts/python/transform_aliquots.py"
            
rule etl_notebook:
    input:
        samples=rules.extract_sample.output.df,
        study = rules.extract_study.output.df,
        tissue = rules.extract_tissue.output.df,
        cohort = rules.extract_cohort.output.df,
        collections = rules.extract_collections.output.df,
        sf = rules.extract_sf.output.df,
        packages = rules.extract_packages.output.df,
        datasets = rules.extract_datasets.output.df,
    #output:
    #    experiments="metadata/experiments.tsv",
    #    cases="metadata/cases.tsv",
    #    samples="metadata/samples.tsv",
    #    aliquots="metadata/aliquots.tsv",
    conda: "envs/cdnm-jupyter-python-3.7.6.yaml"
    log: notebook="metadata/etl_notebook.ipynb"
    notebook: "../notebook/study-overview.ipynb"
